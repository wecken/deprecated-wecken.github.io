{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/wecken/Development/wecken-portfolio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React from\"react\";import{ButtonBase,Card,Grid,Typography}from\"@mui/material\";import styled from\"@emotion/styled\";import{useNavigate}from\"react-router-dom\";import{Box}from\"@mui/system\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MediaCard=function MediaCard(_ref){var title=_ref.title,subtitle=_ref.subtitle,body=_ref.body,imageSrc=_ref.imageSrc,to=_ref.to;var StyledCard=styled(Card)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    background-color: \\\"white\\\";\\n  \"])));var StyledButtonBase=styled(ButtonBase)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    max-width: 100%;\\n  \"])));var StyledTypography=styled(Typography)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    text-align: left;\\n  \"])));var TextConteiner=styled(Grid)(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n    max-width: 100%;\\n  \"])));var styles={card:{},textContainer:{padding:\"16px\"}};var CoverImage=function CoverImage(){return/*#__PURE__*/_jsx(\"img\",{src:imageSrc,alt:title,style:{maxWidth:\"100%\"}});};var navigate=useNavigate();var onClickCard=function onClickCard(){to?navigate(to):alert(\"Wecken hasn't published the content yet. Please wait.\");};return/*#__PURE__*/_jsx(StyledButtonBase,{onClick:onClickCard,children:/*#__PURE__*/_jsx(StyledCard,{children:/*#__PURE__*/_jsxs(TextConteiner,{container:true,alignItems:\"center\",children:[/*#__PURE__*/_jsx(CoverImage,{}),/*#__PURE__*/_jsx(Grid,{style:styles.textContainer,gap:2,children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"flex-start\",flexDirection:\"column\",children:[/*#__PURE__*/_jsx(Box,{mb:1,children:/*#__PURE__*/_jsx(StyledTypography,{variant:\"h2\",children:title})}),subtitle&&/*#__PURE__*/_jsx(StyledTypography,{variant:\"subtitle2\",children:subtitle}),/*#__PURE__*/_jsx(StyledTypography,{color:\"gray\",variant:\"body2\",children:body}),/*#__PURE__*/_jsx(StyledTypography,{variant:\"button\",color:\"primary\",style:{alignSelf:\"flex-end\"},children:\"Detail\"})]})})]})})});};export default MediaCard;","map":{"version":3,"sources":["/Users/wecken/Development/wecken-portfolio/src/libs/components/molecules/MediaCard.tsx"],"names":["React","ButtonBase","Card","Grid","Typography","styled","useNavigate","Box","MediaCard","title","subtitle","body","imageSrc","to","StyledCard","StyledButtonBase","StyledTypography","TextConteiner","styles","card","textContainer","padding","CoverImage","maxWidth","navigate","onClickCard","alert","alignSelf"],"mappings":"uNAAA,MAAOA,CAAAA,KAAP,KAA2B,OAA3B,CACA,OAASC,UAAT,CAAqBC,IAArB,CAA2BC,IAA3B,CAAiCC,UAAjC,KAAmD,eAAnD,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,GAAT,KAAoB,aAApB,C,wFAUA,GAAMC,CAAAA,SAAqB,CAAG,QAAxBA,CAAAA,SAAwB,MAA6C,IAA1CC,CAAAA,KAA0C,MAA1CA,KAA0C,CAAnCC,QAAmC,MAAnCA,QAAmC,CAAzBC,IAAyB,MAAzBA,IAAyB,CAAnBC,QAAmB,MAAnBA,QAAmB,CAATC,EAAS,MAATA,EAAS,CACzE,GAAMC,CAAAA,UAAU,CAAGT,MAAM,CAACH,IAAD,CAAT,uGAAhB,CAGA,GAAMa,CAAAA,gBAAgB,CAAGV,MAAM,CAACJ,UAAD,CAAT,6FAAtB,CAGA,GAAMe,CAAAA,gBAAgB,CAAGX,MAAM,CAACD,UAAD,CAAT,8FAAtB,CAIA,GAAMa,CAAAA,aAAa,CAAGZ,MAAM,CAACF,IAAD,CAAT,6FAAnB,CAIA,GAAMe,CAAAA,MAAM,CAAG,CACbC,IAAI,CAAE,EADO,CAEbC,aAAa,CAAE,CACbC,OAAO,CAAE,MADI,CAFF,CAAf,CAOA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,mBAAO,YAAK,GAAG,CAAEV,QAAV,CAAoB,GAAG,CAAEH,KAAzB,CAAgC,KAAK,CAAE,CAAEc,QAAQ,CAAE,MAAZ,CAAvC,EAAP,CACD,CAFD,CAGA,GAAMC,CAAAA,QAAQ,CAAGlB,WAAW,EAA5B,CACA,GAAMmB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBZ,EAAE,CACEW,QAAQ,CAACX,EAAD,CADV,CAEEa,KAAK,CAAC,uDAAD,CAFT,CAGD,CAJD,CAMA,mBACE,KAAC,gBAAD,EAAkB,OAAO,CAAED,WAA3B,uBACE,KAAC,UAAD,wBACE,MAAC,aAAD,EAAe,SAAS,KAAxB,CAAyB,UAAU,CAAC,QAApC,wBACE,KAAC,UAAD,IADF,cAEE,KAAC,IAAD,EAAM,KAAK,CAAEP,MAAM,CAACE,aAApB,CAAmC,GAAG,CAAE,CAAxC,uBACE,MAAC,GAAD,EACE,OAAO,CAAC,MADV,CAEE,cAAc,CAAC,YAFjB,CAGE,aAAa,CAAC,QAHhB,wBAKE,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,uBACE,KAAC,gBAAD,EAAkB,OAAO,CAAC,IAA1B,UAAgCX,KAAhC,EADF,EALF,CAQGC,QAAQ,eACP,KAAC,gBAAD,EAAkB,OAAO,CAAC,WAA1B,UACGA,QADH,EATJ,cAaE,KAAC,gBAAD,EAAkB,KAAK,CAAE,MAAzB,CAAiC,OAAO,CAAC,OAAzC,UACGC,IADH,EAbF,cAgBE,KAAC,gBAAD,EACE,OAAO,CAAC,QADV,CAEE,KAAK,CAAE,SAFT,CAGE,KAAK,CAAE,CAAEgB,SAAS,CAAE,UAAb,CAHT,oBAhBF,GADF,EAFF,GADF,EADF,EADF,CAmCD,CAnED,CAqEA,cAAenB,CAAAA,SAAf","sourcesContent":["import React, { VFC } from \"react\"\nimport { ButtonBase, Card, Grid, Typography } from \"@mui/material\"\nimport styled from \"@emotion/styled\"\nimport { useNavigate } from \"react-router-dom\"\nimport { Box } from \"@mui/system\"\n\ninterface Props {\n  title: string\n  subtitle?: string\n  body: string\n  imageSrc: string\n  to?: string\n}\n\nconst MediaCard: VFC<Props> = ({ title, subtitle, body, imageSrc, to }) => {\n  const StyledCard = styled(Card)`\n    background-color: \"white\";\n  `\n  const StyledButtonBase = styled(ButtonBase)`\n    max-width: 100%;\n  `\n  const StyledTypography = styled(Typography)`\n    text-align: left;\n  `\n\n  const TextConteiner = styled(Grid)`\n    max-width: 100%;\n  `\n\n  const styles = {\n    card: {},\n    textContainer: {\n      padding: \"16px\",\n    },\n  }\n\n  const CoverImage = () => {\n    return <img src={imageSrc} alt={title} style={{ maxWidth: \"100%\" }} />\n  }\n  const navigate = useNavigate()\n  const onClickCard = () => {\n    to\n      ? navigate(to)\n      : alert(\"Wecken hasn't published the content yet. Please wait.\")\n  }\n\n  return (\n    <StyledButtonBase onClick={onClickCard}>\n      <StyledCard>\n        <TextConteiner container alignItems=\"center\">\n          <CoverImage />\n          <Grid style={styles.textContainer} gap={2}>\n            <Box\n              display=\"flex\"\n              justifyContent=\"flex-start\"\n              flexDirection=\"column\"\n            >\n              <Box mb={1}>\n                <StyledTypography variant=\"h2\">{title}</StyledTypography>\n              </Box>\n              {subtitle && (\n                <StyledTypography variant=\"subtitle2\">\n                  {subtitle}\n                </StyledTypography>\n              )}\n              <StyledTypography color={\"gray\"} variant=\"body2\">\n                {body}\n              </StyledTypography>\n              <StyledTypography\n                variant=\"button\"\n                color={\"primary\"}\n                style={{ alignSelf: \"flex-end\" }}\n              >\n                Detail\n              </StyledTypography>\n            </Box>\n          </Grid>\n        </TextConteiner>\n      </StyledCard>\n    </StyledButtonBase>\n  )\n}\n\nexport default MediaCard\n"]},"metadata":{},"sourceType":"module"}