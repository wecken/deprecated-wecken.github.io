{"ast":null,"code":"var _jsxFileName = \"/Users/wecken/Development/wecken-portfolio/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from \"react\";\nimport Header from \"libs/components/molecules/Header\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Main from \"libs/components/views/main\";\nimport Mbux from \"libs/components/views/mbux\";\nimport KurashiruStore from \"libs/components/views/kurashiruStore\";\nimport EOW from \"libs/components/views/eow\";\nimport { ThemeProvider } from \"@mui/material\";\nimport { getDesignTokens } from \"libs/theme/theme\";\nimport i18n from \"i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\nimport { JA_JP, EN_US } from \"libs/translations\";\nimport { createTheme } from \"@mui/system\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst resources = {\n  ja: JA_JP,\n  en: EN_US\n}; // const initialLang: SupportedLanguage = \"ja\"\n\ni18n.use(initReactI18next).use(detector).init({\n  resources,\n  // lng: initialLang,\n  fallbackLng: \"en\",\n  interpolation: {\n    escapeValue: false\n  }\n});\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = useState(\"light\");\n  const colorMode = useMemo(() => ({\n    // The dark mode switch would invoke this method\n    toggleColorMode: () => {\n      setMode(prevMode => prevMode === \"light\" ? \"dark\" : \"light\");\n    }\n  }), []); // Update the theme only if the mode changes\n  // Update the theme only if the mode changes\n\n  const theme = React.useMemo(() => createTheme(getDesignTokens(mode)), [mode]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/works/mbux\",\n          element: /*#__PURE__*/_jsxDEV(Mbux, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/works/kurashiru_store\",\n          element: /*#__PURE__*/_jsxDEV(KurashiruStore, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/works/EOW\",\n          element: /*#__PURE__*/_jsxDEV(EOW, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"rH2IxS7ra29cpeULm3TREnfglHU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/wecken/Development/wecken-portfolio/src/App.tsx"],"names":["React","useMemo","useState","Header","Route","Routes","Main","Mbux","KurashiruStore","EOW","ThemeProvider","getDesignTokens","i18n","detector","initReactI18next","JA_JP","EN_US","createTheme","resources","ja","en","use","init","fallbackLng","interpolation","escapeValue","App","mode","setMode","colorMode","toggleColorMode","prevMode","theme"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,GAAP,MAAgB,2BAAhB;AACA,SAAsBC,aAAtB,QAA2C,eAA3C;AACA,SAAgBC,eAAhB,QAAuC,kBAAvC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,mBAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,EAAE,EAAEJ,KADY;AAEhBK,EAAAA,EAAE,EAAEJ;AAFY,CAAlB,C,CAKA;;AAEAJ,IAAI,CACDS,GADH,CACOP,gBADP,EAEGO,GAFH,CAEOR,QAFP,EAGGS,IAHH,CAGQ;AACJJ,EAAAA,SADI;AAEJ;AACAK,EAAAA,WAAW,EAAE,IAHT;AAIJC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE;AADA;AAJX,CAHR;;AAYA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB1B,QAAQ,CAAc,OAAd,CAAhC;AACA,QAAM2B,SAAS,GAAG5B,OAAO,CACvB,OAAO;AACL;AACA6B,IAAAA,eAAe,EAAE,MAAM;AACrBF,MAAAA,OAAO,CAAEG,QAAD,IACNA,QAAQ,KAAK,OAAb,GAAuB,MAAvB,GAAgC,OAD3B,CAAP;AAGD;AANI,GAAP,CADuB,EASvB,EATuB,CAAzB,CAFa,CAcb;AACA;;AACA,QAAMC,KAAK,GAAGhC,KAAK,CAACC,OAAN,CAAc,MAAMgB,WAAW,CAACN,eAAe,CAACgB,IAAD,CAAhB,CAA/B,EAAwD,CAACA,IAAD,CAAxD,CAAd;AAEA,sBACE;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEK,KAAtB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,aAAZ;AAA0B,UAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,wBAAZ;AAAqC,UAAA,OAAO,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAA9C;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,YAAZ;AAAyB,UAAA,OAAO,eAAE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAaD;;GA/BQN,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["import React, { useMemo, useState } from \"react\"\nimport Header from \"libs/components/molecules/Header\"\nimport { Route, Routes } from \"react-router-dom\"\nimport Main from \"libs/components/views/main\"\nimport Mbux from \"libs/components/views/mbux\"\nimport KurashiruStore from \"libs/components/views/kurashiruStore\"\nimport EOW from \"libs/components/views/eow\"\nimport { PaletteMode, ThemeProvider } from \"@mui/material\"\nimport theme, { getDesignTokens } from \"libs/theme/theme\"\nimport i18n from \"i18next\"\nimport detector from \"i18next-browser-languagedetector\"\nimport { initReactI18next } from \"react-i18next\"\nimport { JA_JP, EN_US } from \"libs/translations\"\nimport { createTheme } from \"@mui/system\"\nconst resources = {\n  ja: JA_JP,\n  en: EN_US,\n}\n\n// const initialLang: SupportedLanguage = \"ja\"\n\ni18n\n  .use(initReactI18next)\n  .use(detector)\n  .init({\n    resources,\n    // lng: initialLang,\n    fallbackLng: \"en\",\n    interpolation: {\n      escapeValue: false,\n    },\n  })\n\nfunction App() {\n  const [mode, setMode] = useState<PaletteMode>(\"light\")\n  const colorMode = useMemo(\n    () => ({\n      // The dark mode switch would invoke this method\n      toggleColorMode: () => {\n        setMode((prevMode: PaletteMode) =>\n          prevMode === \"light\" ? \"dark\" : \"light\"\n        )\n      },\n    }),\n    []\n  )\n\n  // Update the theme only if the mode changes\n  // Update the theme only if the mode changes\n  const theme = React.useMemo(() => createTheme(getDesignTokens(mode)), [mode])\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <Header />\n        <Routes>\n          <Route path=\"/\" element={<Main />} />\n          <Route path=\"/works/mbux\" element={<Mbux />} />\n          <Route path=\"/works/kurashiru_store\" element={<KurashiruStore />} />\n          <Route path=\"/works/EOW\" element={<EOW />} />\n        </Routes>\n      </ThemeProvider>\n    </>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}