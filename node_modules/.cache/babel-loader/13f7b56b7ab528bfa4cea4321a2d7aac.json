{"ast":null,"code":"import e from \"void-elements\";\nvar t = /\\s([^'\"/\\s><]+?)[\\s/>]|([^\\s=]+)=\\s?(\".*?\"|'.*?')/g;\n\nfunction n(n) {\n  var r = {\n    type: \"tag\",\n    name: \"\",\n    voidElement: !1,\n    attrs: {},\n    children: []\n  },\n      i = n.match(/<\\/?([^\\s]+?)[/\\s>]/);\n\n  if (i && (r.name = i[1], (e[i[1]] || \"/\" === n.charAt(n.length - 2)) && (r.voidElement = !0), r.name.startsWith(\"!--\"))) {\n    var s = n.indexOf(\"--\\x3e\");\n    return {\n      type: \"comment\",\n      comment: -1 !== s ? n.slice(4, s) : \"\"\n    };\n  }\n\n  for (var a = new RegExp(t), c = null; null !== (c = a.exec(n));) if (c[0].trim()) if (c[1]) {\n    var o = c[1].trim(),\n        l = [o, \"\"];\n    o.indexOf(\"=\") > -1 && (l = o.split(\"=\")), r.attrs[l[0]] = l[1], a.lastIndex--;\n  } else c[2] && (r.attrs[c[2]] = c[3].trim().substring(1, c[3].length - 1));\n\n  return r;\n}\n\nvar r = /<[a-zA-Z0-9\\-\\!\\/](?:\"[^\"]*\"|'[^']*'|[^'\">])*>/g,\n    i = /^\\s*$/,\n    s = Object.create(null);\n\nfunction a(e, t) {\n  switch (t.type) {\n    case \"text\":\n      return e + t.content;\n\n    case \"tag\":\n      return e += \"<\" + t.name + (t.attrs ? function (e) {\n        var t = [];\n\n        for (var n in e) t.push(n + '=\"' + e[n] + '\"');\n\n        return t.length ? \" \" + t.join(\" \") : \"\";\n      }(t.attrs) : \"\") + (t.voidElement ? \"/>\" : \">\"), t.voidElement ? e : e + t.children.reduce(a, \"\") + \"</\" + t.name + \">\";\n\n    case \"comment\":\n      return e + \"\\x3c!--\" + t.comment + \"--\\x3e\";\n  }\n}\n\nvar c = {\n  parse: function (e, t) {\n    t || (t = {}), t.components || (t.components = s);\n    var a,\n        c = [],\n        o = [],\n        l = -1,\n        m = !1;\n\n    if (0 !== e.indexOf(\"<\")) {\n      var u = e.indexOf(\"<\");\n      c.push({\n        type: \"text\",\n        content: -1 === u ? e : e.substring(0, u)\n      });\n    }\n\n    return e.replace(r, function (r, s) {\n      if (m) {\n        if (r !== \"</\" + a.name + \">\") return;\n        m = !1;\n      }\n\n      var u,\n          f = \"/\" !== r.charAt(1),\n          h = r.startsWith(\"\\x3c!--\"),\n          p = s + r.length,\n          d = e.charAt(p);\n\n      if (h) {\n        var v = n(r);\n        return l < 0 ? (c.push(v), c) : ((u = o[l]).children.push(v), c);\n      }\n\n      if (f && (l++, \"tag\" === (a = n(r)).type && t.components[a.name] && (a.type = \"component\", m = !0), a.voidElement || m || !d || \"<\" === d || a.children.push({\n        type: \"text\",\n        content: e.slice(p, e.indexOf(\"<\", p))\n      }), 0 === l && c.push(a), (u = o[l - 1]) && u.children.push(a), o[l] = a), (!f || a.voidElement) && (l > -1 && (a.voidElement || a.name === r.slice(2, -1)) && (l--, a = -1 === l ? c : o[l]), !m && \"<\" !== d && d)) {\n        u = -1 === l ? c : o[l].children;\n        var x = e.indexOf(\"<\", p),\n            g = e.slice(p, -1 === x ? void 0 : x);\n        i.test(g) && (g = \" \"), (x > -1 && l + u.length >= 0 || \" \" !== g) && u.push({\n          type: \"text\",\n          content: g\n        });\n      }\n    }), c;\n  },\n  stringify: function (e) {\n    return e.reduce(function (e, t) {\n      return e + a(\"\", t);\n    }, \"\");\n  }\n};\nexport default c;","map":{"version":3,"mappings":"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","names":["attrRE","stringify","tag","res","type","name","voidElement","attrs","children","tagMatch","match","lookup","charAt","length","startsWith","endIndex","indexOf","comment","slice","reg","RegExp","result","exec","trim","attr","arr","split","lastIndex","substring","tagRE","whitespaceRE","empty","Object","create","buff","doc","content","key","push","join","attrString","reduce","parse","html","options","components","current","level","inComponent","end","replace","index","parent","isOpen","isComment","start","nextChar","parseTag","undefined","test","token","rootEl"],"sources":["/Users/wecken/Development/wecken.github.io/node_modules/html-parse-stringify/src/parse-tag.js","/Users/wecken/Development/wecken.github.io/node_modules/html-parse-stringify/src/parse.js","/Users/wecken/Development/wecken.github.io/node_modules/html-parse-stringify/src/stringify.js","/Users/wecken/Development/wecken.github.io/node_modules/html-parse-stringify/src/index.js"],"sourcesContent":["import lookup from 'void-elements'\nconst attrRE = /\\s([^'\"/\\s><]+?)[\\s/>]|([^\\s=]+)=\\s?(\".*?\"|'.*?')/g\n\nexport default function stringify(tag) {\n  const res = {\n    type: 'tag',\n    name: '',\n    voidElement: false,\n    attrs: {},\n    children: [],\n  }\n\n  const tagMatch = tag.match(/<\\/?([^\\s]+?)[/\\s>]/)\n  if (tagMatch) {\n    res.name = tagMatch[1]\n    if (\n      lookup[tagMatch[1]] ||\n      tag.charAt(tag.length - 2) === '/'\n    ) {\n      res.voidElement = true\n    }\n\n    // handle comment tag\n    if (res.name.startsWith('!--')) {\n      const endIndex = tag.indexOf('-->')\n      return {\n        type: 'comment',\n        comment: endIndex !== -1 ? tag.slice(4, endIndex) : '',\n      }\n    }\n  }\n\n  const reg = new RegExp(attrRE)\n  let result = null\n  for (;;) {\n    result = reg.exec(tag)\n\n    if (result === null) {\n      break\n    }\n\n    if (!result[0].trim()) {\n      continue\n    }\n\n    if (result[1]) {\n      const attr = result[1].trim()\n      let arr = [attr, '']\n\n      if (attr.indexOf('=') > -1) {\n        arr = attr.split('=')\n      }\n\n      res.attrs[arr[0]] = arr[1]\n      reg.lastIndex--\n    } else if (result[2]) {\n      res.attrs[result[2]] = result[3].trim().substring(1, result[3].length - 1)\n    }\n  }\n\n  return res\n}\n","import parseTag from './parse-tag'\n\nconst tagRE = /<[a-zA-Z0-9\\-\\!\\/](?:\"[^\"]*\"|'[^']*'|[^'\">])*>/g\nconst whitespaceRE = /^\\s*$/\n\n// re-used obj for quick lookups of components\nconst empty = Object.create(null)\n\nexport default function parse(html, options) {\n  options || (options = {})\n  options.components || (options.components = empty)\n  const result = []\n  const arr = []\n  let current\n  let level = -1\n  let inComponent = false\n\n  // handle text at top level\n  if (html.indexOf('<') !== 0) {\n    var end = html.indexOf('<')\n    result.push({\n      type: 'text',\n      content: end === -1 ? html : html.substring(0, end),\n    })\n  }\n\n  html.replace(tagRE, function (tag, index) {\n    if (inComponent) {\n      if (tag !== '</' + current.name + '>') {\n        return\n      } else {\n        inComponent = false\n      }\n    }\n    const isOpen = tag.charAt(1) !== '/'\n    const isComment = tag.startsWith('<!--')\n    const start = index + tag.length\n    const nextChar = html.charAt(start)\n    let parent\n\n    if (isComment) {\n      const comment = parseTag(tag)\n\n      // if we're at root, push new base node\n      if (level < 0) {\n        result.push(comment)\n        return result\n      }\n      parent = arr[level]\n      parent.children.push(comment)\n      return result\n    }\n\n    if (isOpen) {\n      level++\n\n      current = parseTag(tag)\n      if (current.type === 'tag' && options.components[current.name]) {\n        current.type = 'component'\n        inComponent = true\n      }\n\n      if (\n        !current.voidElement &&\n        !inComponent &&\n        nextChar &&\n        nextChar !== '<'\n      ) {\n        current.children.push({\n          type: 'text',\n          content: html.slice(start, html.indexOf('<', start)),\n        })\n      }\n\n      // if we're at root, push new base node\n      if (level === 0) {\n        result.push(current)\n      }\n\n      parent = arr[level - 1]\n\n      if (parent) {\n        parent.children.push(current)\n      }\n\n      arr[level] = current\n    }\n\n    if (!isOpen || current.voidElement) {\n      if (\n        level > -1 &&\n        (current.voidElement || current.name === tag.slice(2, -1))\n      ) {\n        level--\n        // move current up a level to match the end tag\n        current = level === -1 ? result : arr[level]\n      }\n      if (!inComponent && nextChar !== '<' && nextChar) {\n        // trailing text node\n        // if we're at the root, push a base text node. otherwise add as\n        // a child to the current node.\n        parent = level === -1 ? result : arr[level].children\n\n        // calculate correct end of the content slice in case there's\n        // no tag after the text node.\n        const end = html.indexOf('<', start)\n        let content = html.slice(start, end === -1 ? undefined : end)\n        // if a node is nothing but whitespace, collapse it as the spec states:\n        // https://www.w3.org/TR/html4/struct/text.html#h-9.1\n        if (whitespaceRE.test(content)) {\n          content = ' '\n        }\n        // don't add whitespace-only text nodes if they would be trailing text nodes\n        // or if they would be leading whitespace-only text nodes:\n        //  * end > -1 indicates this is not a trailing text node\n        //  * leading node is when level is -1 and parent has length 0\n        if ((end > -1 && level + parent.length >= 0) || content !== ' ') {\n          parent.push({\n            type: 'text',\n            content: content,\n          })\n        }\n      }\n    }\n  })\n\n  return result\n}\n","function attrString(attrs) {\n  const buff = []\n  for (let key in attrs) {\n    buff.push(key + '=\"' + attrs[key] + '\"')\n  }\n  if (!buff.length) {\n    return ''\n  }\n  return ' ' + buff.join(' ')\n}\n\nfunction stringify(buff, doc) {\n  switch (doc.type) {\n    case 'text':\n      return buff + doc.content\n    case 'tag':\n      buff +=\n        '<' +\n        doc.name +\n        (doc.attrs ? attrString(doc.attrs) : '') +\n        (doc.voidElement ? '/>' : '>')\n      if (doc.voidElement) {\n        return buff\n      }\n      return buff + doc.children.reduce(stringify, '') + '</' + doc.name + '>'\n    case 'comment':\n      buff += '<!--' + doc.comment + '-->'\n      return buff\n  }\n}\n\nexport default function (doc) {\n  return doc.reduce(function (token, rootEl) {\n    return token + stringify('', rootEl)\n  }, '')\n}\n","import parse from './parse'\nimport stringify from './stringify'\n\nexport default {\n  parse,\n  stringify,\n}\n"]},"metadata":{},"sourceType":"module"}