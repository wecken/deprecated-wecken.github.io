{"ast":null,"code":"var _jsxFileName = \"/Users/wecken/Development/wecken-portfolio/src/libs/components/views/kurashiruStore.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Typography } from \"@mui/material\";\nimport IntroduceWorkArticle from \"../molecules/IntroduceWorkArticle\";\nimport KurashiruStoreImage from \"assets/images/kurashiru_store_ui.png\";\nimport { Box } from \"@mui/system\";\nimport creative from \"../../../assets/images/kurashiru_store_creative.png\";\nimport flow from \"../../../assets/images/kurashiru_store_flow.png\";\nimport spec from \"../../../assets/images/kurashiru_store_spec.png\";\nimport styled from \"@emotion/styled\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction KurashiruStore() {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n\n  const articleImage = (imageSrc, alt) => {\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageSrc,\n      alt: alt,\n      style: {\n        maxWidth: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  };\n\n  const StyledParagraph = styled(Typography)`\n    margin: 16px 0;\n  `;\n  return /*#__PURE__*/_jsxDEV(IntroduceWorkArticle, {\n    title: \"kurashiru store (2020)\",\n    subTitle: t(\"short_descripton_kurashiru_store_01\"),\n    imageSrc: KurashiruStoreImage,\n    children: [/*#__PURE__*/_jsxDEV(StyledParagraph, {\n      variant: \"body1\",\n      children: t(\"short_descripton_kurashiru_store_02\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: t(\"Role\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledParagraph, {\n      variant: \"body1\",\n      children: [\">\", t('UI/UX Designer')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledParagraph, {\n      variant: \"body1\",\n      children: \"Front-end engineer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: t(\"Tools\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledParagraph, {\n      variant: \"body1\",\n      children: \"Figma, Visual Studio Code, SourceTree\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: t(\"Skills\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledParagraph, {\n      variant: \"body1\",\n      children: \"UI/UX Design, Graphic Design, Front-end engineering (ERB, vue.js, HTML/CSS), Git (GitHub)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: t(\"Challenges\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledParagraph, {\n      variant: \"body1\",\n      children: \"Since I've never designed for E-commerce app, I did a lot of researches on major EC web sites, and apps such as Amazon, Rakuten, Mercari, etc. Not only the EC apps, but I also researched design of popular sweets brands' web sites such as BAKE, Mr. Cheesecake, etc because our main product lineups were sweets.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledParagraph, {\n      variant: \"body1\",\n      children: \"This project was also where I learned designing banners, or other creative works. As EC service, the UI that just works is not enough, but we needed to sell products. Therefore, various methods for communicating with customers were needed. I created many banners in different sizes and forms to attract customers, and make our products look great.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), articleImage(creative, \"Example of my creative works (static landing page)\"), /*#__PURE__*/_jsxDEV(Box, {\n      my: 4,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Design\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), articleImage(spec, \"part of the design specification of kurashiru store\"), /*#__PURE__*/_jsxDEV(StyledParagraph, {\n      variant: \"body1\",\n      children: \"I started with designing the product description page first because we offered very few number of items in the beginning, which made the collection page or category page not so important.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), articleImage(flow, \"Sign up flow.\"), /*#__PURE__*/_jsxDEV(StyledParagraph, {\n      variant: \"body1\",\n      children: \"I also designed sign up flow very carefully because it's where the most of customers drop out, and end up without getting to conversion. One of the most important feature was that customer could actually put the item in the cart without having an account. This strategy was very successful because (I assume) once the customer puts itmes into the cart, creating account and entering forms seem to be very natural. If we asked creating account before customer start interacting with our services, many of them would have dropped out earlier. To achieve this, the logic behind the scene is pretty complex as you can see the image above. However, from customer point of view, the design was very clean and simple.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(KurashiruStore, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = KurashiruStore;\nexport default KurashiruStore;\n\nvar _c;\n\n$RefreshReg$(_c, \"KurashiruStore\");","map":{"version":3,"sources":["/Users/wecken/Development/wecken-portfolio/src/libs/components/views/kurashiruStore.tsx"],"names":["React","Typography","IntroduceWorkArticle","KurashiruStoreImage","Box","creative","flow","spec","styled","useTranslation","KurashiruStore","t","articleImage","imageSrc","alt","maxWidth","StyledParagraph"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Typography } from \"@mui/material\"\nimport IntroduceWorkArticle from \"../molecules/IntroduceWorkArticle\"\nimport KurashiruStoreImage from \"assets/images/kurashiru_store_ui.png\"\nimport { Box } from \"@mui/system\"\nimport creative from \"../../../assets/images/kurashiru_store_creative.png\"\nimport flow from \"../../../assets/images/kurashiru_store_flow.png\"\nimport spec from \"../../../assets/images/kurashiru_store_spec.png\"\nimport styled from \"@emotion/styled\"\nimport { useTranslation } from \"react-i18next\"\n\nfunction KurashiruStore(): React.ReactElement {\n  const { t } = useTranslation()\n  const articleImage = (imageSrc: string, alt: string) => {\n    return <img src={imageSrc} alt={alt} style={{ maxWidth: \"100%\" }} />\n  }\n  const StyledParagraph = styled(Typography)`\n    margin: 16px 0;\n  `\n  return (\n    <IntroduceWorkArticle\n      title=\"kurashiru store (2020)\"\n      subTitle={t(\"short_descripton_kurashiru_store_01\")}\n      imageSrc={KurashiruStoreImage}\n    >\n      <StyledParagraph variant=\"body1\">\n        {t(\"short_descripton_kurashiru_store_02\")}\n      </StyledParagraph>\n      <Box mt={4}>\n        <Typography variant=\"h3\">{t(\"Role\")}</Typography>\n      </Box>\n      <StyledParagraph variant=\"body1\">>{t('UI/UX Designer')}</StyledParagraph>\n      <StyledParagraph variant=\"body1\">Front-end engineer</StyledParagraph>\n      <Box mt={4}>\n        <Typography variant=\"h3\">{t(\"Tools\")}</Typography>\n      </Box>\n      <StyledParagraph variant=\"body1\">\n        Figma, Visual Studio Code, SourceTree\n      </StyledParagraph>\n      <Box mt={4}>\n        <Typography variant=\"h3\">{t(\"Skills\")}</Typography>\n      </Box>\n      <StyledParagraph variant=\"body1\">\n        UI/UX Design, Graphic Design, Front-end engineering (ERB, vue.js,\n        HTML/CSS), Git (GitHub)\n      </StyledParagraph>\n      <Box mt={4}>\n        <Typography variant=\"h3\">{t(\"Challenges\")}</Typography>\n      </Box>\n      <StyledParagraph variant=\"body1\">\n        Since I've never designed for E-commerce app, I did a lot of researches\n        on major EC web sites, and apps such as Amazon, Rakuten, Mercari, etc.\n        Not only the EC apps, but I also researched design of popular sweets\n        brands' web sites such as BAKE, Mr. Cheesecake, etc because our main\n        product lineups were sweets.\n      </StyledParagraph>\n      <StyledParagraph variant=\"body1\">\n        This project was also where I learned designing banners, or other\n        creative works. As EC service, the UI that just works is not enough, but\n        we needed to sell products. Therefore, various methods for communicating\n        with customers were needed. I created many banners in different sizes\n        and forms to attract customers, and make our products look great.\n      </StyledParagraph>\n      {articleImage(\n        creative,\n        \"Example of my creative works (static landing page)\"\n      )}\n      <Box my={4}>\n        <Typography variant=\"h3\">Design</Typography>\n      </Box>\n      {articleImage(\n        spec,\n        \"part of the design specification of kurashiru store\"\n      )}\n      <StyledParagraph variant=\"body1\">\n        I started with designing the product description page first because we\n        offered very few number of items in the beginning, which made the\n        collection page or category page not so important.\n      </StyledParagraph>\n      {articleImage(flow, \"Sign up flow.\")}\n      <StyledParagraph variant=\"body1\">\n        I also designed sign up flow very carefully because it's where the most\n        of customers drop out, and end up without getting to conversion. One of\n        the most important feature was that customer could actually put the item\n        in the cart without having an account. This strategy was very successful\n        because (I assume) once the customer puts itmes into the cart, creating\n        account and entering forms seem to be very natural. If we asked creating\n        account before customer start interacting with our services, many of\n        them would have dropped out earlier. To achieve this, the logic behind\n        the scene is pretty complex as you can see the image above. However,\n        from customer point of view, the design was very clean and simple.\n      </StyledParagraph>\n    </IntroduceWorkArticle>\n  )\n}\n\nexport default KurashiruStore\n"]},"metadata":{},"sourceType":"module"}